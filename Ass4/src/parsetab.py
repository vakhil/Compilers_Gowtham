
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '358336DB1BCBBF18DB36C5B28791A78D'
    
_lr_action_items = {'DO':([2,3,6,9,10,11,12,15,16,36,37,39,41,42,43,44,45,46,47,48,49,50,51,52,59,65,69,],[-22,-38,-37,-23,-36,-26,-25,-21,-6,-5,53,-12,57,-30,-31,-11,-28,-8,-7,-29,-32,-10,-27,-9,-15,-13,-33,]),'RETURN':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,18,19,22,23,24,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,57,58,63,64,65,67,69,],[1,-22,-38,-40,-37,-4,-23,-36,-26,-25,-40,-40,-21,-6,-39,-3,-35,1,1,-5,-12,-2,-30,-31,-11,-28,-8,-7,-29,-32,-10,-27,-9,1,-40,-40,1,-34,-13,-40,-33,]),'NUMBER':([0,1,2,3,4,6,7,9,10,11,12,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,57,58,63,64,65,67,69,],[3,3,-22,-38,-40,-37,-4,-23,-36,-26,-25,-40,-40,-21,-6,-39,-3,3,-35,3,3,3,3,3,3,3,3,3,3,3,3,-5,-12,-2,-30,-31,-11,-28,-8,-7,-29,-32,-10,-27,-9,3,-40,-40,3,-34,-13,-40,-33,]),'WHILE':([0,1,2,3,4,6,7,9,10,11,12,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,57,58,63,64,65,67,69,],[14,14,-22,-38,-40,-37,-4,-23,-36,-26,-25,-40,-40,-21,-6,-39,-3,14,-35,14,14,14,14,14,14,14,14,14,14,14,14,-5,-12,-2,-30,-31,-11,-28,-8,-7,-29,-32,-10,-27,-9,14,-40,-40,14,-34,-13,-40,-33,]),'less_than':([2,3,6,9,10,11,12,15,16,17,39,42,43,44,45,46,48,49,50,51,52,65,69,],[-22,-38,-37,-23,-36,-26,-25,-21,34,34,34,-30,34,-11,-28,-8,-29,34,-10,-27,-9,-13,-33,]),'MINUS':([2,3,6,9,10,11,12,15,16,17,39,42,43,44,45,46,48,49,50,51,52,65,69,],[-22,-38,-37,-23,-36,-26,-25,-21,35,35,35,35,35,-11,35,-8,35,35,-10,35,-9,-13,-33,]),'DEF':([0,1,2,3,4,6,7,9,10,11,12,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,57,58,63,64,65,67,69,],[5,5,-22,-38,-40,-37,-4,-23,-36,-26,-25,-40,-40,-21,-6,-39,-3,5,-35,5,5,5,5,5,5,5,5,5,5,5,5,-5,-12,-2,-30,-31,-11,-28,-8,-7,-29,-32,-10,-27,-9,5,-40,-40,5,-34,-13,-40,-33,]),'STRING':([0,1,2,3,4,6,7,9,10,11,12,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,57,58,63,64,65,67,69,],[6,6,-22,-38,-40,-37,-4,-23,-36,-26,-25,-40,-40,-21,-6,-39,-3,6,-35,6,6,6,6,6,6,6,6,6,6,6,6,-5,-12,-2,-30,-31,-11,-28,-8,-7,-29,-32,-10,-27,-9,6,-40,-40,6,-34,-13,-40,-33,]),'RPAREN':([38,54,55,56,61,62,66,68,],[-40,59,-40,-17,-16,-19,-40,-18,]),'greater_than_equals':([2,3,6,9,10,11,12,15,16,17,39,42,43,44,45,46,48,49,50,51,52,65,69,],[-22,-38,-37,-23,-36,-26,-25,-21,25,25,25,-30,25,-11,-28,-8,-29,25,-10,-27,-9,-13,-33,]),'lessthan_equals':([2,3,6,9,10,11,12,15,16,17,39,42,43,44,45,46,48,49,50,51,52,65,69,],[-22,-38,-37,-23,-36,-26,-25,-21,31,31,31,-30,31,-11,-28,-8,-29,31,-10,-27,-9,-13,-33,]),'Exclaim1':([2,3,6,9,10,11,12,15,16,17,39,42,43,44,45,46,48,49,50,51,52,65,69,],[-22,-38,-37,-23,-36,-26,-25,-21,32,32,-12,-30,-31,-11,-28,-8,-29,32,-10,-27,-9,-13,-33,]),'Multiply':([2,3,6,9,10,11,12,15,16,17,39,42,43,44,45,46,48,49,50,51,52,65,69,],[-22,-38,-37,-23,-36,-26,-25,-21,33,33,33,33,33,-11,33,33,33,33,-10,33,33,-13,-33,]),'$end':([2,3,4,6,7,8,9,10,11,12,13,15,16,18,19,36,39,40,42,43,44,45,46,47,48,49,50,51,52,65,69,],[-22,-38,-40,-37,-4,0,-23,-36,-26,-25,-1,-21,-6,-39,-3,-5,-12,-2,-30,-31,-11,-28,-8,-7,-29,-32,-10,-27,-9,-13,-33,]),'END':([2,3,4,6,7,9,10,11,12,15,16,18,19,36,39,40,42,43,44,45,46,47,48,49,50,51,52,58,65,67,69,],[-22,-38,-40,-37,-4,-23,-36,-26,-25,-21,-6,-39,-3,-5,-12,-2,-30,-31,-11,-28,-8,-7,-29,-32,-10,-27,-9,65,-13,69,-33,]),'DIVIDE':([2,3,6,9,10,11,12,15,16,17,39,42,43,44,45,46,48,49,50,51,52,65,69,],[-22,-38,-37,-23,-36,-26,-25,-21,27,27,27,27,27,-11,27,27,27,27,-10,27,27,-13,-33,]),'SemiColon':([2,3,6,9,10,11,12,15,16,17,22,30,39,42,43,44,45,46,48,49,50,51,52,65,69,],[-22,-38,-37,-23,-36,-26,-25,-21,-40,36,-35,47,-12,-30,-31,-11,-28,-8,-29,-32,-10,-27,-9,-13,-33,]),'FPNUMBER':([0,1,2,3,4,6,7,9,10,11,12,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,39,40,42,43,44,45,46,47,48,49,50,51,52,53,57,58,63,64,65,67,69,],[9,9,-22,-38,-40,-37,-4,-23,-36,-26,-25,-40,-40,-21,-6,-39,-3,9,-35,9,9,9,9,9,9,9,9,9,9,9,9,-5,-12,-2,-30,-31,-11,-28,-8,-7,-29,-32,-10,-27,-9,9,-40,-40,9,-34,-13,-40,-33,]),'EQUALS':([12,],[21,]),'Seperator':([55,66,],[60,60,]),'LPAREN':([20,],[38,]),'Identifier':([0,1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,57,58,60,63,64,65,67,69,],[12,12,-22,-38,-40,20,-37,-4,-23,-36,-26,-25,-40,-40,-21,-6,-39,-3,12,-35,12,12,12,12,12,12,12,12,12,12,12,12,-5,55,-12,-2,-30,-31,-11,-28,-8,-7,-29,-32,-10,-27,-9,12,-40,-40,66,12,-34,-13,-40,-33,]),'double_equals':([2,3,6,9,10,11,12,15,16,17,39,42,43,44,45,46,48,49,50,51,52,65,69,],[-22,-38,-37,-23,-36,-26,-25,-21,26,26,-12,-30,-31,-11,-28,-8,-29,26,-10,-27,-9,-13,-33,]),'Add':([2,3,6,9,10,11,12,15,16,17,39,42,43,44,45,46,48,49,50,51,52,65,69,],[-22,-38,-37,-23,-36,-26,-25,-21,29,29,29,29,29,-11,29,-8,29,29,-10,29,-9,-13,-33,]),'greater_than':([2,3,6,9,10,11,12,15,16,17,39,42,43,44,45,46,48,49,50,51,52,65,69,],[-22,-38,-37,-23,-36,-26,-25,-21,28,28,28,-30,28,-11,-28,-8,-29,28,-10,-27,-9,-13,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'complex2000':([55,66,],[61,68,]),'compstmt':([0,53,63,],[13,58,67,]),'complex1':([4,],[19,]),'ARGDECL':([20,],[37,]),'M_while':([57,],[63,]),'EXPR':([0,23,24,53,63,],[7,7,41,7,7,]),'PRIMARY':([0,1,21,23,24,25,26,27,28,29,31,32,33,34,35,53,63,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'STMT':([0,23,53,63,],[4,40,4,4,]),'VARNAME':([0,1,21,23,24,25,26,27,28,29,31,32,33,34,35,53,63,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'start':([0,],[8,]),'LITERAL':([0,1,21,23,24,25,26,27,28,29,31,32,33,34,35,53,63,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'M_quad':([13,14,16,58,67,],[23,24,30,23,23,]),'ARG':([0,1,21,23,24,25,26,27,28,29,31,32,33,34,35,53,63,],[16,17,39,16,16,42,43,44,45,46,48,49,50,51,52,16,16,]),'VARIABLE':([0,1,21,23,24,25,26,27,28,29,31,32,33,34,35,53,63,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'ARGLIST':([38,],[54,]),'empty':([4,13,14,16,38,55,57,58,66,67,],[18,22,22,22,56,62,64,22,62,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> compstmt','start',1,'p_start','parser.py',16),
  ('compstmt -> compstmt M_quad STMT','compstmt',3,'p_compstmt_1','parser.py',28),
  ('compstmt -> STMT complex1','compstmt',2,'p_compstmt_2','parser.py',35),
  ('STMT -> EXPR','STMT',1,'p_STMT','parser.py',42),
  ('EXPR -> RETURN ARG SemiColon','EXPR',3,'p_expre_return','parser.py',47),
  ('EXPR -> ARG','EXPR',1,'p_EXPR_new','parser.py',56),
  ('EXPR -> ARG M_quad SemiColon','EXPR',3,'p_EXPR','parser.py',61),
  ('ARG -> ARG Add ARG','ARG',3,'p_ARG_operations','parser.py',87),
  ('ARG -> ARG MINUS ARG','ARG',3,'p_ARG_operations','parser.py',88),
  ('ARG -> ARG Multiply ARG','ARG',3,'p_ARG_operations','parser.py',89),
  ('ARG -> ARG DIVIDE ARG','ARG',3,'p_ARG_operations','parser.py',90),
  ('ARG -> Identifier EQUALS ARG','ARG',3,'p_ARG_relational','parser.py',119),
  ('PRIMARY -> DEF Identifier ARGDECL DO compstmt END','PRIMARY',6,'p_PRIMARY_function','parser.py',158),
  ('complex145 -> empty','complex145',1,'p_complex145','parser.py',169),
  ('ARGDECL -> LPAREN ARGLIST RPAREN','ARGDECL',3,'p_ARGDECL','parser.py',186),
  ('ARGLIST -> Identifier complex2000','ARGLIST',2,'p_ARGLIST','parser.py',192),
  ('ARGLIST -> empty','ARGLIST',1,'p_ARGLIST','parser.py',193),
  ('complex2000 -> Seperator Identifier complex2000','complex2000',3,'p_complex2000','parser.py',202),
  ('complex2000 -> empty','complex2000',1,'p_complex2000','parser.py',203),
  ('complex169 -> empty','complex169',1,'p_complex169','parser.py',211),
  ('ARG -> PRIMARY','ARG',1,'p_ARG_others','parser.py',224),
  ('VARIABLE -> VARNAME','VARIABLE',1,'p_variable','parser.py',234),
  ('LITERAL -> FPNUMBER','LITERAL',1,'p_literal_fpnumber','parser.py',242),
  ('LHS -> VARIABLE','LHS',1,'p_LHS','parser.py',249),
  ('VARNAME -> Identifier','VARNAME',1,'p_varname','parser.py',256),
  ('PRIMARY -> VARIABLE','PRIMARY',1,'p_PRIMARY_variable','parser.py',276),
  ('ARG -> ARG less_than ARG','ARG',3,'p_relation_operations','parser.py',283),
  ('ARG -> ARG greater_than ARG','ARG',3,'p_relation_operations','parser.py',284),
  ('ARG -> ARG lessthan_equals ARG','ARG',3,'p_relation_operations','parser.py',285),
  ('ARG -> ARG greater_than_equals ARG','ARG',3,'p_relation_operations','parser.py',286),
  ('ARG -> ARG double_equals ARG','ARG',3,'p_relation_operations','parser.py',287),
  ('ARG -> ARG Exclaim1 ARG','ARG',3,'p_relation_operations','parser.py',288),
  ('PRIMARY -> WHILE M_quad EXPR DO M_while compstmt END','PRIMARY',7,'p_PRIMARY_conditionals','parser.py',325),
  ('M_while -> empty','M_while',1,'p_m_while','parser.py',348),
  ('M_quad -> empty','M_quad',1,'p_mark','parser.py',357),
  ('PRIMARY -> LITERAL','PRIMARY',1,'p_PRIMARY_LITERAL','parser.py',367),
  ('LITERAL -> STRING','LITERAL',1,'p_literal_string','parser.py',391),
  ('LITERAL -> NUMBER','LITERAL',1,'p_literal_number','parser.py',398),
  ('complex1 -> empty','complex1',1,'p_complex1','parser.py',403),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',411),
]
