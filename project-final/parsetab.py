
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C26D40550C88C1DC0ACA0F1527A43B9A'
    
_lr_action_items = {'THEN':([27,28,29,30,31,33,34,36,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,48,-41,-21,-20,-17,-44,-5,-22,-9,-6,-25,-24,-27,-7,-8,-26,-23,-43,-45,-42,]),'DO':([27,28,29,31,33,34,36,41,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,91,95,96,],[-18,-47,-46,-41,-21,-20,-17,65,-44,-5,-22,-9,-6,-25,-24,-27,-7,-8,-26,-23,-43,-45,-42,-52,-37,99,]),'NUMBER':([2,11,13,18,19,26,32,35,49,50,51,52,53,54,55,56,57,58,59,60,61,64,72,80,],[-52,28,28,28,-30,28,28,28,28,28,28,-52,28,28,28,28,28,28,28,-52,28,28,28,28,]),'WHILE':([0,1,7,8,14,19,23,24,40,44,45,46,48,65,67,68,84,92,93,94,97,98,99,100,104,],[2,2,-52,-52,-52,-30,-11,-12,-10,-13,-14,-15,-52,-52,2,-34,2,-31,-52,-28,-52,-33,2,2,-32,]),'Percentage':([27,28,29,30,31,33,34,36,37,41,47,62,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,51,-41,-21,-20,-17,51,51,51,51,-44,51,51,-9,51,51,51,51,-7,-8,51,51,-43,51,51,]),'less_than':([27,28,29,30,31,33,34,36,37,41,47,62,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,50,-41,-21,-20,-17,50,50,50,50,-44,-5,-22,-9,-6,-25,-24,50,-7,-8,50,-23,-43,50,50,]),'DEF':([0,1,7,8,14,19,23,24,40,44,45,46,48,65,67,68,84,92,93,94,97,98,99,100,104,],[3,3,-52,-52,-52,-30,-11,-12,-10,-13,-14,-15,-52,-52,3,-34,3,-31,-52,-28,-52,-33,3,3,-32,]),'STRING':([2,11,13,18,19,26,32,35,49,50,51,52,53,54,55,56,57,58,59,60,61,64,72,80,],[-52,29,29,29,-30,29,29,29,29,29,29,-52,29,29,29,29,29,29,29,-52,29,29,29,29,]),'RPAREN':([27,28,29,31,33,34,36,62,63,66,69,70,71,73,74,75,76,77,78,79,81,82,85,86,88,89,],[-18,-47,-46,-41,-21,-20,-17,82,-44,-52,-5,-22,-9,-6,-25,-24,-27,-7,-8,-26,-23,-43,-38,91,-45,-42,]),'OP_AND':([27,28,29,30,31,33,34,36,37,41,47,62,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,52,-41,-21,-20,-17,52,52,52,52,-44,-5,-22,-9,-6,-25,-24,52,-7,-8,-26,-23,-43,-45,52,]),'MINUS':([27,28,29,30,31,33,34,36,37,41,47,62,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,53,-41,-21,-20,-17,53,53,53,53,-44,-5,53,-9,-6,53,53,53,-7,-8,53,53,-43,53,53,]),'greater_than_equals':([27,28,29,30,31,33,34,36,37,41,47,62,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,54,-41,-21,-20,-17,54,54,54,54,-44,-5,-22,-9,-6,-25,-24,54,-7,-8,54,-23,-43,54,54,]),'lessthan_equals':([27,28,29,30,31,33,34,36,37,41,47,62,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,55,-41,-21,-20,-17,55,55,55,55,-44,-5,-22,-9,-6,-25,-24,55,-7,-8,55,-23,-43,55,55,]),'Exclaim1':([27,28,29,30,31,33,34,36,37,41,47,62,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,56,-41,-21,-20,-17,56,56,56,56,-44,-5,-22,-9,-6,-25,-24,56,-7,-8,-26,-23,-43,-45,-42,]),'Multiply':([27,28,29,30,31,33,34,36,37,41,47,62,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,57,-41,-21,-20,-17,57,57,57,57,-44,57,57,-9,57,57,57,57,-7,-8,57,57,-43,57,57,]),'$end':([1,5,7,8,12,14,15,16,17,19,23,24,40,44,45,46,92,94,104,],[-52,0,-52,-52,-1,-52,-4,-2,-3,-30,-11,-12,-10,-13,-14,-15,-31,-28,-32,]),'END':([1,7,8,14,15,16,17,19,23,24,40,44,45,46,87,90,92,94,101,102,104,],[-52,-52,-52,-52,-4,-2,-3,-30,-11,-12,-10,-13,-14,-15,92,94,-31,-28,103,104,-32,]),'DIVIDE':([27,28,29,30,31,33,34,36,37,41,47,62,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,58,-41,-21,-20,-17,58,58,58,58,-44,58,58,-9,58,58,58,58,-7,-8,58,58,-43,58,58,]),'SemiColon':([4,6,9,13,19,21,22,25,27,28,29,31,33,34,36,37,38,39,47,63,64,69,70,71,73,74,75,76,77,78,79,81,82,83,88,89,103,],[-52,-52,-52,-52,-30,44,45,46,-18,-47,-46,-41,-21,-20,-17,-50,-51,-48,-16,-44,-52,-5,-22,-9,-6,-25,-24,-27,-7,-8,-26,-23,-43,-49,-45,-42,-35,]),'EQUALS':([10,],[26,]),'ELSE':([1,7,8,14,15,16,17,19,23,24,40,44,45,46,87,92,94,104,],[-52,-52,-52,-52,-4,-2,-3,-30,-11,-12,-10,-13,-14,-15,93,-31,-28,-32,]),'Seperator':([27,28,29,31,33,34,36,37,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,-41,-21,-20,-17,64,-44,-5,-22,-9,-6,-25,-24,-27,-7,-8,-26,-23,-43,-45,-42,]),'LPAREN':([2,11,13,18,19,20,26,32,35,42,43,49,50,51,52,53,54,55,56,57,58,59,60,61,64,72,80,],[-52,32,32,32,-30,-52,32,32,32,66,-36,32,32,32,-52,32,32,32,32,32,32,32,-52,32,32,32,32,]),'Identifier':([0,1,2,3,7,8,11,13,14,18,19,23,24,26,32,35,40,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,65,67,68,72,80,84,92,93,94,97,98,99,100,104,],[10,10,-52,20,-52,-52,34,34,-52,34,-30,-11,-12,34,34,34,-10,-13,-14,-15,-52,34,34,34,-52,34,34,34,34,34,34,34,-52,34,34,-52,10,-34,34,34,10,-31,-52,-28,-52,-33,10,10,-32,]),'IF':([0,1,7,8,14,19,23,24,40,44,45,46,48,65,67,68,84,92,93,94,97,98,99,100,104,],[11,11,-52,-52,-52,-30,-11,-12,-10,-13,-14,-15,-52,-52,11,-34,11,-31,-52,-28,-52,-33,11,11,-32,]),'Exclaimation':([2,11,13,18,19,26,32,35,49,50,51,52,53,54,55,56,57,58,59,60,61,64,72,80,],[-52,35,35,35,-30,35,35,35,35,35,35,-52,35,35,35,35,35,35,35,-52,35,35,35,35,]),'double_equals':([27,28,29,30,31,33,34,36,37,41,47,62,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,59,-41,-21,-20,-17,59,59,59,59,-44,-5,-22,-9,-6,-25,-24,59,-7,-8,-26,-23,-43,59,59,]),'PUTS':([0,1,7,8,14,19,23,24,40,44,45,46,48,65,67,68,84,92,93,94,97,98,99,100,104,],[13,13,-52,-52,-52,-30,-11,-12,-10,-13,-14,-15,-52,-52,13,-34,13,-31,-52,-28,-52,-33,13,13,-32,]),'Add':([27,28,29,30,31,33,34,36,37,41,47,62,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,49,-41,-21,-20,-17,49,49,49,49,-44,-5,49,-9,-6,49,49,49,-7,-8,49,49,-43,49,49,]),'OP_OR':([27,28,29,30,31,33,34,36,37,41,47,62,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,60,-41,-21,-20,-17,60,60,60,60,-44,-5,-22,-9,-6,-25,-24,60,-7,-8,-26,-23,-43,-45,-42,]),'greater_than':([27,28,29,30,31,33,34,36,37,41,47,62,63,69,70,71,73,74,75,76,77,78,79,81,82,88,89,],[-18,-47,-46,61,-41,-21,-20,-17,61,61,61,61,-44,-5,-22,-9,-6,-25,-24,61,-7,-8,61,-23,-43,61,61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'VARNAME':([11,13,18,26,32,35,49,50,51,53,54,55,56,57,58,59,61,64,72,80,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'STMT':([0,1,67,84,99,100,],[1,1,1,1,1,1,]),'start':([0,],[5,]),'EXPR':([11,13,18,26,32,35,49,50,51,53,54,55,56,57,58,59,61,64,72,80,],[30,37,41,47,62,63,69,70,71,73,74,75,76,77,78,79,81,37,88,89,]),'ASGN':([0,1,67,84,99,100,],[4,4,4,4,4,4,]),'complex22':([20,],[42,]),'ARGLIST':([66,],[86,]),'empty':([1,2,4,6,7,8,9,13,14,20,48,52,60,64,65,66,91,93,97,],[15,19,19,19,19,19,19,38,19,43,68,19,19,38,19,85,95,98,68,]),'PRINTS':([0,1,67,84,99,100,],[6,6,6,6,6,6,]),'ifThenElse':([0,1,67,84,99,100,],[7,7,7,7,7,7,]),'whiles':([0,1,67,84,99,100,],[8,8,8,8,8,8,]),'LITERAL':([11,13,18,26,32,35,49,50,51,53,54,55,56,57,58,59,61,64,72,80,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'N_rare':([93,],[97,]),'func':([0,1,67,84,99,100,],[9,9,9,9,9,9,]),'VARIABLE':([11,13,18,26,32,35,49,50,51,53,54,55,56,57,58,59,61,64,72,80,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'compstmt':([0,1,67,84,99,100,],[12,16,87,90,101,102,]),'M_ifB':([48,97,],[67,100,]),'PRIMARY':([11,13,18,26,32,35,49,50,51,53,54,55,56,57,58,59,61,64,72,80,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'LISTS':([13,64,],[39,83,]),'M_quad':([2,4,6,7,8,9,14,52,60,65,],[18,21,22,23,24,25,40,72,80,84,]),'complex33':([91,],[96,]),'M_state':([1,],[17,]),'ifThen':([0,1,67,84,99,100,],[14,14,14,14,14,14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> compstmt','start',1,'p_start','parser.py',16),
  ('compstmt -> STMT compstmt','compstmt',2,'p_compstmt','parser.py',44),
  ('compstmt -> STMT M_state','compstmt',2,'p_compstmt','parser.py',45),
  ('M_state -> empty','M_state',1,'p_M_state','parser.py',57),
  ('EXPR -> EXPR Add EXPR','EXPR',3,'p_ARG_operations','parser.py',77),
  ('EXPR -> EXPR MINUS EXPR','EXPR',3,'p_ARG_operations','parser.py',78),
  ('EXPR -> EXPR Multiply EXPR','EXPR',3,'p_ARG_operations','parser.py',79),
  ('EXPR -> EXPR DIVIDE EXPR','EXPR',3,'p_ARG_operations','parser.py',80),
  ('EXPR -> EXPR Percentage EXPR','EXPR',3,'p_ARG_operations','parser.py',81),
  ('STMT -> ifThen M_quad','STMT',2,'p_statement_conditionals','parser.py',104),
  ('STMT -> ifThenElse M_quad','STMT',2,'p_statement_conditionals','parser.py',105),
  ('STMT -> whiles M_quad','STMT',2,'p_statement_conditionals','parser.py',106),
  ('STMT -> ASGN M_quad SemiColon','STMT',3,'p_ARG_relational','parser.py',125),
  ('STMT -> PRINTS M_quad SemiColon','STMT',3,'p_ARG_relational','parser.py',126),
  ('STMT -> func M_quad SemiColon','STMT',3,'p_ARG_relational','parser.py',127),
  ('ASGN -> Identifier EQUALS EXPR','ASGN',3,'p_ASGN_basic','parser.py',137),
  ('EXPR -> PRIMARY','EXPR',1,'p_ARG_others','parser.py',185),
  ('VARIABLE -> VARNAME','VARIABLE',1,'p_variable','parser.py',195),
  ('LHS -> VARIABLE','LHS',1,'p_LHS','parser.py',206),
  ('VARNAME -> Identifier','VARNAME',1,'p_varname','parser.py',212),
  ('PRIMARY -> VARIABLE','PRIMARY',1,'p_PRIMARY_variable','parser.py',238),
  ('EXPR -> EXPR less_than EXPR','EXPR',3,'p_relation_operations','parser.py',243),
  ('EXPR -> EXPR greater_than EXPR','EXPR',3,'p_relation_operations','parser.py',244),
  ('EXPR -> EXPR lessthan_equals EXPR','EXPR',3,'p_relation_operations','parser.py',245),
  ('EXPR -> EXPR greater_than_equals EXPR','EXPR',3,'p_relation_operations','parser.py',246),
  ('EXPR -> EXPR double_equals EXPR','EXPR',3,'p_relation_operations','parser.py',247),
  ('EXPR -> EXPR Exclaim1 EXPR','EXPR',3,'p_relation_operations','parser.py',248),
  ('whiles -> WHILE M_quad EXPR DO M_quad compstmt END','whiles',7,'p_PRIMARY_conditionals','parser.py',295),
  ('M_while -> empty','M_while',1,'p_m_while','parser.py',315),
  ('M_quad -> empty','M_quad',1,'p_mark','parser.py',322),
  ('ifThen -> IF EXPR THEN M_ifB compstmt END','ifThen',6,'p_primary_IF','parser.py',329),
  ('ifThenElse -> IF EXPR THEN M_ifB compstmt ELSE N_rare M_ifB compstmt END','ifThenElse',10,'p_primary_ifthen','parser.py',345),
  ('N_rare -> empty','N_rare',1,'p_N_rare','parser.py',353),
  ('M_ifB -> empty','M_ifB',1,'p_M_ifB','parser.py',358),
  ('func -> DEF Identifier complex22 LPAREN ARGLIST RPAREN complex33 DO compstmt END','func',10,'p_PRIMARY_function','parser.py',364),
  ('complex22 -> empty','complex22',1,'p_complex22','parser.py',380),
  ('complex33 -> empty','complex33',1,'p_complex33','parser.py',396),
  ('ARGLIST -> empty','ARGLIST',1,'p_arglist','parser.py',413),
  ('complex2 -> ELSE compstmt','complex2',2,'p_complex2','parser.py',422),
  ('complex2 -> empty','complex2',1,'p_complex2','parser.py',423),
  ('PRIMARY -> LITERAL','PRIMARY',1,'p_PRIMARY_LITERAL','parser.py',427),
  ('EXPR -> EXPR OP_OR M_quad EXPR','EXPR',4,'p_express_or','parser.py',455),
  ('EXPR -> LPAREN EXPR RPAREN','EXPR',3,'p_expression_bracket','parser.py',462),
  ('EXPR -> Exclaimation EXPR','EXPR',2,'p_express_not','parser.py',468),
  ('EXPR -> EXPR OP_AND M_quad EXPR','EXPR',4,'p_express_and','parser.py',474),
  ('LITERAL -> STRING','LITERAL',1,'p_literal_string','parser.py',481),
  ('LITERAL -> NUMBER','LITERAL',1,'p_literal_number','parser.py',488),
  ('PRINTS -> PUTS LISTS','PRINTS',2,'p_print_list','parser.py',494),
  ('LISTS -> EXPR Seperator LISTS','LISTS',3,'p_List','parser.py',500),
  ('LISTS -> EXPR','LISTS',1,'p_List','parser.py',501),
  ('LISTS -> empty','LISTS',1,'p_List','parser.py',502),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',513),
]
